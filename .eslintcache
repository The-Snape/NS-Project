[{"/home/severus/Desktop/Network Security/ns-app/src/index.js":"1","/home/severus/Desktop/Network Security/ns-app/src/App.js":"2","/home/severus/Desktop/Network Security/ns-app/src/Navbar.js":"3","/home/severus/Desktop/Network Security/ns-app/src/PA1.js":"4","/home/severus/Desktop/Network Security/ns-app/src/Home.js":"5","/home/severus/Desktop/Network Security/ns-app/src/PA2.js":"6"},{"size":432,"mtime":1611565775864,"results":"7","hashOfConfig":"8"},{"size":622,"mtime":1618600113536,"results":"9","hashOfConfig":"8"},{"size":600,"mtime":1618599949671,"results":"10","hashOfConfig":"8"},{"size":1456,"mtime":1618926110628,"results":"11","hashOfConfig":"8"},{"size":112,"mtime":1618599669325,"results":"12","hashOfConfig":"8"},{"size":2163,"mtime":1618925974848,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"r3n87f",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/severus/Desktop/Network Security/ns-app/src/index.js",[],["30","31"],"/home/severus/Desktop/Network Security/ns-app/src/App.js",["32"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PA1 from \"./PA1\";\nimport PA2 from \"./PA2\";\nimport Home from \"./Home\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/pa1\">\n            <PA1 />\n          </Route>\n          <Route path=\"/pa2\">\n            <PA2/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/severus/Desktop/Network Security/ns-app/src/Navbar.js",[],"/home/severus/Desktop/Network Security/ns-app/src/PA1.js",[],"/home/severus/Desktop/Network Security/ns-app/src/Home.js",[],["33","34"],"/home/severus/Desktop/Network Security/ns-app/src/PA2.js",["35","36","37"],"import { useEffect, useState } from \"react\";\nconst PA2 = () => {\n  const [data, setData] = useState({ title: \"hello mf\" });\n  const [blockSize, setBlockSize] = useState(16);\n  const [round, setRound] = useState(1);\n  const [cipher,setCipher]=useState('');\n  const [plaintext,setPlaintext]=useState('');\n  const [key,setKey]=useState('BBBBB');\n  const arr=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16];\n    const handleChange = async (msg) => {\n       setPlaintext(msg);\n    await fetch(\"/api\", {\n        method: \"POST\",\n        credentials: \"include\",\n        body: JSON.stringify({'round':round,'bsize':blockSize,'text':plaintext,'key':key}),\n        cache: \"no-cache\",\n        headers: new Headers({\n          \"content-type\": \"application/json\",\n        }),\n      })\n        .then((response) => response.json())\n        .then(async (dati) => {\n          await setCipher(dati.code);\n          console.log(dati.code);\n        });\n  };\n  return (\n    <div>\n        <h2>Data Encryption Algorithm</h2>\n        <br/><br/>\n    <div >\n        <label>Block Size: </label>\n      <select name=\"\" onChange={async (e)=>{await setBlockSize(e.target.value);console.log(blockSize);}}>\n        <option value=\"16\">16 Bits</option>\n        <option value=\"32\">32 Bits</option>\n        <option value=\"64\">64 Bits</option>\n      </select>\n      \n      </div>\n      <br/><br/><br/>\n      <div >\n          <label>Number of Rounds: </label>\n      <select onChange={async (e)=>{await setRound(e.target.value);console.log(round);}}>{arr.map((x)=>{\n          return(<option>{x}</option>)\n      })}</select>\n      </div>\n      <br/><br/><br/>\n      <div >\n      <label>Key: </label>\n      <input type=\"text\" onChange={async (e)=>{await setKey(e.target.value);console.log(key);}}/>\n      </div>\n      <br/><br/><br/>\n      <div>\n      <h3>Plaintext</h3>\n      <textarea\n        className=\"inpit\"\n        onChange={(e) => {\n          handleChange(e.target.value);\n        }}\n        value={plaintext}\n      />\n      </div>\n      <div>\n      <h3>Ciphertext</h3>\n      <textarea\n        className=\"inpit\"\n        \n        value={cipher}\n      />\n      </div>\n    </div>\n  );\n};\n\nexport default PA2;\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},{"ruleId":"42","severity":1,"message":"48","line":1,"column":10,"nodeType":"44","messageId":"45","endLine":1,"endColumn":19},{"ruleId":"42","severity":1,"message":"49","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":14},{"ruleId":"42","severity":1,"message":"50","line":3,"column":16,"nodeType":"44","messageId":"45","endLine":3,"endColumn":23},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["51"],["52"],"'useEffect' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]